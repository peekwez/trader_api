version: '3'
networks:
  trader:

services:
  # postgreSQL database
  db:
    image: postgres:9.4.1
    env_file: etc/.db.env
    ports:
      - "5431:5432"
    networks:
      - trader

  # redis server
  redis:
    image: redis:2.8.19
    ports:
      - "6378:6379"
    networks:
      - trader

  # memcached server
  memcached:
    image: memcached:1.4.25
    ports:
      - "11210:11211"
    networks:
      - trader

  # rabbitmq server
  rabbit:
    image: rabbitmq:3.6.0
    env_file: etc/.rabbit.env
    ports:
      - "5671:5672"
      - "15671:15672" # rabbitmq management plugin
    networks:
      - trader

  # flask development server
  dev:
    restart: always
    build:
      context: ./services/app
      dockerfile: Dockerfile
    command: ./run_dev.sh
    env_file:
      - etc/.dev.env
    volumes:
      - .:/app
    ports:
      - "5001:5000"
    depends_on:
      - db
      - rabbit
      - redis
      - memcached
    networks:
      - trader

  # chausette/circus service for flask app, celery, beat, flower and
  app:
    restart: always
    build:
      context: ./services/app
      dockerfile: Dockerfile
    command: ./run_app.sh
    env_file:
      - etc/.app.env
    volumes:
      - .:/app
    ports:
      - "5000:5000"
      - "5080:5080"
    depends_on:
      - db
      - rabbit
      - redis
      - memcached

  # nginx web server
  web:
    restart: always
    build:
      context: ./services/web
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./:app
